dist: bionic
language: go

env:
  global:
    - GO111MODULE=on
    - GOLANGCI_LINT_VERSION=1.19.1
    - secure: o2SV9wS+38wbG7otE1/qIa7HMerWXLKwkjAZeRwRFo4pSso8u2e9kwjf8RVII79vhIuf5AOTVPftyxas8LOBG1t/xWA8MZUcGYuxF+cWGVoP6pjO+5ACH6TlaAPzr5XHLD9dx9qhrqkMEaefEVhX9eRuT4wF+hduG4YlGYZLT5VD1WBesXr1JZhdLlON0T4y7+ywwm9ji7CB7ED6BC/IbX8lCrspf/U1Rv9GUm8ld9iLCjNeoHbzSppitcmKUamGGxaMn2O1cmtB8bS1JbKhNAoXQLKc9sbaLjH7WtgHZ7yrt56ALU/4jNycypXcICBzJARDprVoL0nYgs6ETq5ogPbgpRXcXwtuhkhZayDDq4gfpdUAEqdmNpDNagwJQAniktjnPah2y6j+TxiBRNJ8EYB1gnM6KLwY5rPEE1LPOPMpPVZ4AhoE50cgImBGtdZbH9obcGo+uKOySBVHsSLajyDondy/UFzJ1JgQ1Nm3xdVL6zp0DAqmfuVyvHBqpsdeXHg7BH7mUSPkyIHa2UpBYfz3UrX0605ZaIUV/ky87pd9y4DP8HtWLG5I9jOuJfdov6XqP4/a2fnBWHtUy7/4AexRk5/CWmNN79w0nccV4ugbMUqSF191TIY9bZoLmhYY/YKOulNpQ30weDpAU0obLLEpGS8qSGcOz/zpQBNpzMQ=
    - secure: CrbugFIwvMUfpNLvuk6jJkMlZ29hS9wx1TEajr7QIgk+gDq7MD1/ph1b3NG5zej6Z7QVtAhRp0TR/3LD/jf0wrgbd3Awqie6x0j6LzV8HWeLrQNweKaT+JcpWRIIuvbiiaS4Cs0cRyhBEnnC/LaIyfoqUHTUr2nAJIpLCsim11r4eqjhpDJfuBsfxp0/l2Rdy2lG1SGnf/zfgy/Z4oLe35jy6wNPi1Djt7psnlQ/VdvnmaOCLKqM8mns7z5zG13ZHPxEyGh/Qzh7jyJmUppEN5W/i8+oUdVxXJ3NPp8hWPW4T1Dg1u+nV/lxzXi9ZBolpeuBpptOMf84unHmC95PjxhIowKOwkbutgbAQYmpOg0JHSW7PbLj8uk8vTHbCWDMul2pmw8BvFe0otpOg/dHbahfjEg0jVDvjX8R84OAwULO9uwO9CSkVWbqjhZUnFOo7jslAZo0/4BfUe6088TwFPdd6O5orh2m+N8MfwEnqqCqh+VobZ01dSvT+42TIVyp0Xq7XWvs3Ot6rf5HS1BcgkRei0KoT6yiYmWr9Ic0E/tI+K+24uiuRBcry/XyO8FGVlpB8CA9H4TqpivVqoPOYcihDJJAlpgP6hUNV4SveS48yBXdPGsDxH1KgEiwWd9xvn4HJq23Vvjlk2KCfPwAzV02VcN1wrPAl8weIUB/Z3g=
    - secure: paLBeWkEMi+GkDdxfkijtRv7OslJV9/Fy6C4qe6oWPp9Psusi8LNyVzGtQvRf//itRs7TXreJxswfalrEDceNJphb7uE7gitaW4ElVJRxxCwg6JBeRQ2Xy4bmy4brVjbBXrvzjWYC8rxEqFOjQoZOhRWflHNaMyxX63sd0fhOK6/xXvJqYK0ynxDJEnKBBaQZ9bp9Uqx+KFCvm1/4BnvECpAkMGNxLRrQGWH0uzkz7Y7JDYk8mK0QDXd8651OyPRI22yuI4iD2rprnCIjkQzc9Xe/pT6DX9tn0/yOeuOK27NNajDYADlqXENqy9LBUY+3uPCbvJQ969OAJNGpYg7QRYAO0aXb7aEY67PEzk0gh1/oytq7NPH1B1Nez6k1Qthxgc1DBsvkpB0cNrUgp/78OFNvrpuSYims6mEPTPmcYshAUkveh0GLewPTDe6fydo/LwWztzKuEpvVAZcbdY2egG9ELXr9MiONhPXGQwb0JI2tFXBVu55bh15y+EAJv8HsbtGiArZIVr3i/K4/rmbAkhPvREB55P6Mv2hKRBylwoZADcEPklyFDUiX+dSUR+wXvxr2Klpd0rKbNKEd9vJXYsnFlhW/1uopHzgLoeF3S0xJbZzWZ3EZ5F9RbtE0uZOdvgQeNg9yEwMgH9HEiNliKPs1E0Kbrq0DxNPrF0DnSY=

cache:
  directories:
    - ${HOME}/.cache/go-build
    - ${GOPATH}/pkg/mod
  npm: true
  yarn: true

_lint_job: &lint_job
  env: CACHE_NAME=lint
  before_install:
    - if [ -f .github/.ci.conf ]; then . .github/.ci.conf; fi
  install: skip
  before_script:
    - |
      curl -sSfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh \
        | bash -s - -b $GOPATH/bin v${GOLANGCI_LINT_VERSION}
  script:
    - bash .github/lint-filename.sh
    - golangci-lint run ./...

_build_job: &build_job
  env: CACHE_NAME=build
  script:
    - go build ./cmd/biz
    - go build ./cmd/islb
    - go build ./cmd/sfu


_build_avp_docker_job: &build_avp_docker_job
  env: CACHE_NAME=build_avp_docker
  script:
    - echo "TRAVIS_TAG= $TRAVIS_TAG"
    - docker build --tag pionwebrtc/ion-avp:latest -f ./docker/avp.Dockerfile .
  before_deploy:
    - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
    - docker tag pionwebrtc/ion-avp:latest pionwebrtc/ion-avp:"$TRAVIS_TAG"
  deploy:
    provider: script
    script: docker push pionwebrtc/ion-avp:latest && docker push pionwebrtc/ion-avp:"$TRAVIS_TAG"
    on:
      tags: true

_build_biz_docker_job: &build_biz_docker_job
  env: CACHE_NAME=build_biz_docker
  script:
    - docker build --tag pionwebrtc/ion-biz:latest -f ./docker/biz.Dockerfile .
  before_deploy:
    - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
    - docker tag pionwebrtc/ion-biz:latest pionwebrtc/ion-biz:"$TRAVIS_TAG"
  deploy:
    provider: script
    script: docker push pionwebrtc/ion-biz:latest && docker push pionwebrtc/ion-biz:"$TRAVIS_TAG"
    on:
      tags: true

_build_islb_docker_job: &build_islb_docker_job
  env: CACHE_NAME=build_islb_docker
  script:
    - docker build --tag pionwebrtc/ion-islb:latest -f ./docker/islb.Dockerfile .
  before_deploy:
    - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
    - docker tag pionwebrtc/ion-islb:latest pionwebrtc/ion-islb:"$TRAVIS_TAG"
  deploy:
    provider: script
    script: docker push pionwebrtc/ion-islb:latest && docker push pionwebrtc/ion-islb:"$TRAVIS_TAG"
    on:
      tags: true

_build_sfu_docker_job: &build_sfu_docker_job
  env: CACHE_NAME=build_sfu_docker
  script:
    - docker build --tag pionwebrtc/ion-sfu:latest -f ./docker/sfu.Dockerfile .
  before_deploy:
    - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
    - docker tag pionwebrtc/ion-sfu:latest pionwebrtc/ion-sfu:"$TRAVIS_TAG"
  deploy:
    provider: script
    script: docker push pionwebrtc/ion-sfu:latest && docker push pionwebrtc/ion-sfu:"$TRAVIS_TAG"
    on:
      tags: true

_test_job: &test_job
  env: CACHE_NAME=test
  before_install:
    - if [ -f .github/.ci.conf ]; then . .github/.ci.conf; fi
  install:
    - make nodes
  script:
    - make test
    - if [ -n "${TEST_HOOK}" ]; then ${TEST_HOOK}; fi
  after_success:
    - travis_retry bash <(curl -s https://codecov.io/bash) -c -F go
_test_i386_job: &test_i386_job
  env: CACHE_NAME=test386
  services: docker
  before_install:
    - if [ -f .github/.ci.conf ]; then . .github/.ci.conf; fi
  before_script:
    - make start_test_services
  script:
    - testpkgs=${TEST_PACKAGES:-$(go list ./... | grep -v cmd | grep -v conf)}
    - |
      docker run \
        -u $(id -u):$(id -g) \
        -e "GO111MODULE=on" \
        -e "CGO_ENABLED=0" \
        -v ${PWD}:/go/src/github.com/pion/$(basename ${PWD}) \
        -v ${HOME}/gopath/pkg/mod:/go/pkg/mod \
        -v ${HOME}/.cache/go-build:/.cache/go-build \
        -w /go/src/github.com/pion/$(basename ${PWD}) \
        --network ion_default \
        -it i386/golang:${GO_VERSION}-alpine \
        /usr/local/go/bin/go test \
          ${TEST_EXTRA_ARGS:-} \
          -v ${testpkgs}

_e2e_tests: &e2e_tests
  env: 
    - CACHE_NAME=e2e_tests
    - IMAGE=pionwebrtc/ion-e2e-test
    - VERSION=0.1.0b
  services: docker
  before_install:
    - docker pull ${IMAGE}:${VERSION}
  script:
    - |
      timeout 1200 docker run \
        -e JOB_ID=${TRAVIS_BUILD_ID} \
        -e LINODE_KEY=${LINODE_PION_ION_DEV} \
        -e LINODE_DOMAIN_ID=${LINODE_PION_ION_DOMAIN_ID} \
        -e BROWSERSTACK_URL=${PION_BROWSERSTACK_URL} \
        -e ION_VERSION=${TRAVIS_COMMIT} \
        -e MULTI=windows/chrome,windows/firefox,windows/ie,mac/chrome,mac/firefox,mac/safari \
        -v ${PWD}:/data \
        ${IMAGE}:${VERSION} bash /test/00-main.sh
  after_script:
    - |
      docker run \
        -e JOB_ID=${TRAVIS_BUILD_ID} \
        -e LINODE_KEY=${LINODE_PION_ION_DEV} \
        -e LINODE_DOMAIN_ID=${LINODE_PION_ION_DOMAIN_ID} \
        -v ${PWD}:/data \
        ${IMAGE}:${VERSION} bash /test/99-cleanup.sh

jobs:
  include:
    - <<: *e2e_tests
      name: End-to-end browser tests
      if: branch = feature/e2e
    - <<: *lint_job
      name: Lint 1.14
      go: 1.14
      if: branch = master OR tag IS present
    - <<: *build_job
      name: Build 1.13
      go: 1.13
      if: branch = master OR tag IS present
    - <<: *build_job
      name: Build 1.14
      go: 1.14
      if: branch = master OR tag IS present
    - <<: *test_job
      name: Test 1.13
      go: 1.13
      if: branch = master OR tag IS present
    - <<: *test_job
      name: Test 1.14
      go: 1.14
      if: branch = master OR tag IS present
    - <<: *build_avp_docker_job
      name: Build avp docker
      if: branch = master OR tag IS present
    - <<: *build_biz_docker_job
      name: Build biz docker
      if: branch = master OR tag IS present
    - <<: *build_islb_docker_job
      name: Build islb docker
      if: branch = master OR tag IS present
    - <<: *build_sfu_docker_job
      name: Build sfu docker
      if: branch = master OR tag IS present
    # - <<: *test_i386_job
    #   name: Test i386 1.13
    #   env: GO_VERSION=1.13
    #   go: 1.14 # version for host environment used to go list
    # - <<: *test_i386_job
    #   name: Test i386 1.14
    #   env: GO_VERSION=1.14
    #   go: 1.14 # version for host environment used to go list

notifications:
  email: false
